//Linkedlist.h
class LinkedList {
private:
    struct Node {
        int data;
        Node* next;
    };
    Node* head;

public:
    LinkedList();
    ~LinkedList();

    void insert(int value);
    void display() const;
};

//LINKEEDLIST.CPP
#include <iostream>
#include "LinkedList.h"
using namespace std;

LinkedList::LinkedList() {
    head = nullptr;
}

LinkedList::~LinkedList() {
    Node* current = head;
    while (current != nullptr) {
        Node* temp = current;
        current = current->next;
        delete temp;
    }
}

void LinkedList::insert(int value) {
    Node* newNode = new Node;
    newNode->data = value;
    newNode->next = head;
    head = newNode;
}

void LinkedList::display() const {
    Node* current = head;
    while (current != nullptr) {
        cout << current->data << " ";
        current = current->next;
    }
    cout << endl;
}

//MAIN.CPP
#include <iostream>
#include "LinkedList.h"
using namespace std;

int main() {
    LinkedList list;
    list.insert(10);
    list.insert(20);
    list.insert(30);

    cout << "Linked List: ";
    list.display();

    return 0;
}

